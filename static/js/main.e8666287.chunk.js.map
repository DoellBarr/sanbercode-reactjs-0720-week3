{"version":3,"sources":["tugas14/jam.js","tugas15/BuahContext.js","tugas15/BuahList.js","tugas15/BuahForm.js","tugas15/tugas15.js","App.js","serviceWorker.js","index.js"],"names":["Timer","props","state","time","clock","Date","undefined","this","start","setState","timerID","setInterval","tick","currentTime","clearInterval","style","textAlign","toLocaleTimeString","Component","BuahContext","createContext","BuahProvider","useState","DataBuah","setDataBuah","InputName","setInputName","InputHarga","setInputHarga","InputBerat","setInputBerat","StatusForm","setStatusForm","SelectedId","setSelectedId","Provider","value","children","BuahList","useContext","useEffect","axios","get","then","res","data","map","el","id","name","price","weight","console","log","handleDelete","event","preventDefault","idDataBuah","parseInt","target","newDaftarBuah","filter","delete","handleEdit","idBuah","dataBuah","find","x","index","key","onClick","BuahForm","handleChange","onSubmit","toString","replace","Axios","post","put","type","onChange","Tugas15","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e8666287.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Timer extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    //   let hari = new Date().toLocaleString(),\r\n    //       waktu =`${hari.getFullYear()} - ${hari.getMonth() + 1} - ${hari.getDate()}`\r\n\r\n    this.state = {\r\n      time: 0,\r\n      clock: new Date(),\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.start !== undefined){\r\n      this.setState({time: this.props.start})\r\n    }\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n    setInterval(()=>this.currentTime(), 1000)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  currentTime()\r\n  {\r\n    this.setState({\r\n      clock: new Date()\r\n    })\r\n  }\r\n\r\n\r\n  tick() {\r\n    this.setState({\r\n      time: this.state.time - 1\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n      {\r\n        this.state.time >= 0 &&\r\n        <h1 style={{textAlign: \"center\"}}>\r\n          sekarang jam : {this.state.clock.toLocaleTimeString()} hitung mundur : {this.state.time}\r\n        </h1>\r\n      }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timer","import React, { useState, createContext } from 'react';\r\n\r\nexport const BuahContext = createContext;\r\n\r\nexport const BuahProvider = props => {\r\n  const [DataBuah, setDataBuah] = useState(null)\r\n  const [InputName, setInputName] = useState(\"\")\r\n  const [InputHarga, setInputHarga] = useState(\"\")\r\n  const [InputBerat, setInputBerat] = useState(0)\r\n  const [StatusForm, setStatusForm] = useState(\"create\")\r\n  const [SelectedId, setSelectedId] = useState(0)\r\n\r\n\r\n  return (\r\n    <BuahContext.Provider value = { [\r\n      DataBuah, setDataBuah,\r\n      InputName, setInputName,\r\n      InputHarga, setInputHarga,\r\n      InputBerat, setInputBerat,\r\n      StatusForm, setStatusForm,\r\n      SelectedId, setSelectedId\r\n    ] } >\r\n      {props.children}\r\n    </BuahContext.Provider>\r\n  );\r\n};\r\n","import React, {useContext, useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport {BuahContext} from './BuahContext'\r\n\r\nconst BuahList = () =>{\r\n  const [DataBuah, setDataBuah] = useContext(BuahContext)\r\n  const [InputName, setInputName] = useContext(BuahContext)\r\n  const [InputHarga, setInputHarga] = useContext(BuahContext)\r\n  const [InputBerat, setInputBerat] = useContext(BuahContext)\r\n  const [StatusForm, setStatusForm] = useContext(BuahContext)\r\n  const [SelectedId, setSelectedId] = useContext(BuahContext)\r\n\r\n\r\n  useEffect(() =>{\r\n    if (DataBuah === null) {\r\n      axios.get(`http://backendexample.sanbercloud.com/api/fruits`)\r\n      .then(res => {\r\n        setDataBuah(res.data.map(el => {\r\n          return {\r\n            id: el.id,\r\n            name: el.name,\r\n            price: el.price,\r\n            weight: el.weight\r\n          }\r\n        }))\r\n      })\r\n      console.log(DataBuah)\r\n    }\r\n  })\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault()\r\n    let idDataBuah = parseInt(event.target.value)\r\n    let newDaftarBuah = DataBuah.filter(el => {\r\n      return el.id != idDataBuah\r\n    })\r\n    axios.delete(`http://backendexample.sanbercloud.com/api/fruits/`,{id: idDataBuah})\r\n      .then(res => {\r\n        setDataBuah(res.data.map(el => {\r\n          return {\r\n            id: el.id,\r\n            name: el.name,\r\n            price: el.price,\r\n            weight: el.weight\r\n          }\r\n        }))\r\n      })\r\n\r\n      setDataBuah ([...newDaftarBuah])\r\n\r\n    }\r\n\r\n    const handleEdit = (event) => {\r\n      let idBuah = parseInt(event.target.value)\r\n      let dataBuah = DataBuah.find(x=> x.id === idBuah)\r\n      console.log(dataBuah)\r\n      setInputName(dataBuah.name)\r\n      setInputHarga(dataBuah.price)\r\n      setInputBerat(dataBuah.weight)\r\n      setSelectedId(idBuah)\r\n      setStatusForm('edit')\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <h1>Table Harga Buah</h1>\r\n    <table>\r\n      <tr>\r\n        <th> No </th>\r\n        <th> Name </th>\r\n        <th> Price </th>\r\n        <th> Weight </th>\r\n        <th> Action </th>\r\n      </tr>\r\n      {DataBuah !== null && DataBuah.map((el, index)=>{\r\n        return (\r\n          <tr key ={index}>\r\n              <td> {index+1} </td>\r\n              <td> {el.name} </td>\r\n              <td> {el.price} </td>\r\n              <td> {el.weight/1000} kg </td>\r\n                <td>\r\n                  <button onClick={handleEdit} value={el.id}>Edit</button>\r\n                  <button onClick={handleDelete} value={el.id}>Hapus</button>\r\n                </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BuahList\r\n","import React, {useContext} from 'react';\r\nimport {BuahContext} from './BuahContext'\r\nimport Axios from 'axios';\r\n\r\nconst BuahForm = () => {\r\n  const [DataBuah, setDataBuah] = useContext(BuahContext)\r\n  const [InputName, setInputName] = useContext(BuahContext)\r\n  const [InputHarga, setInputHarga] = useContext(BuahContext)\r\n  const [InputBerat, setInputBerat] = useContext(BuahContext)\r\n  const [StatusForm, setStatusForm] = useContext(BuahContext)\r\n  const [SelectedId, setSelectedId] = useContext(BuahContext)\r\n\r\n  const handleChange = (event) => {\r\n     let typedOfInput = event.target.name\r\n     switch (typedOfInput) {\r\n       case \"name\": {\r\n         setInputName(event.target.value)\r\n         break\r\n       }\r\n       case \"price\": {\r\n         setInputHarga(event.target.value)\r\n         break\r\n       }\r\n       case \"weight\": {\r\n         setInputBerat(event.target.value)\r\n         break\r\n       }\r\n       default:\r\n         break;\r\n     }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n   event.preventDefault()\r\n\r\n   let name = InputName\r\n   let price = InputHarga.toString()\r\n   let weight = InputBerat\r\n\r\n   if (name.replace(/\\s/g, '') !== \"\" && price.replace(/\\s/g, '') !== \"\") {\r\n     if(StatusForm === 'create') {\r\n       Axios.post(`http://backendexample.sanbercloud.com/api/fruits`, {\r\n         name,\r\n         price,\r\n         weight\r\n       })\r\n         .then(res => {\r\n           // lakukan pengolahan data\r\n           setDataBuah([...DataBuah,{id:res.data.id,name:name,price:price,weight:weight}])\r\n         })\r\n     } else if(StatusForm === 'edit') {\r\n       Axios.put(`http://backendexample.sanbercloud.com/api/fruits/${SelectedId}`,{name,price,weight})\r\n       .then(res => {\r\n         console.log(res)\r\n         let dataBuah = DataBuah.find(el => el.id === SelectedId)\r\n         dataBuah.name = name\r\n         dataBuah.price = price\r\n         dataBuah.weight =weight\r\n         setDataBuah([...DataBuah])\r\n       })\r\n     }\r\n     setStatusForm(\"create\")\r\n     setSelectedId (0)\r\n     setInputName(\"\")\r\n     setInputHarga(\"\")\r\n     setInputBerat(\"\")\r\n   }\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {/* Form */}\r\n    <h1>Form Data Buah</h1>\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Masukkan Nama Buah :  </label>\r\n      <input type=\"text\" name=\"name\" value={InputName} onChange={handleChange} /><br></br>\r\n      <label>Masukkan Harga Buah : </label>\r\n      <input type=\"text\" name=\"price\" value={InputHarga} onChange={handleChange} /><br></br>\r\n      <label>Masukkan Berat Buah :  </label>\r\n      <input type=\"text\" name=\"weight\" value={InputBerat} onChange={handleChange} /><br></br>\r\n      <button>submit</button>\r\n    </form>\r\n    </>\r\n  )\r\n}\r\nexport default BuahForm\r\n","import React from 'react';\r\nimport {BuahProvider} from './BuahContext.js'\r\nimport BuahList from './BuahList.js'\r\nimport BuahForm from './BuahForm.js'\r\n\r\nconst Tugas15 = () =>{\r\n  return(\r\n    <BuahProvider>\r\n      <BuahList/>\r\n      <BuahForm/>\r\n    </BuahProvider>\r\n  )\r\n}\r\n\r\nexport default Tugas15\r\n","import React from 'react';\r\nimport './App.css';\r\n// import Table from './tugas11/tabel-buah.js'\r\n// import Timer from './tugas12/timer.js'\r\n// import Lists from './tugas13/List CRUD.js'\r\n// import Jam from './tugas13/jam'\r\nimport Jam from './tugas14/jam'\r\n// import Tugas14 from './tugas14/tugas14.js'\r\nimport Tugas15 from './tugas15/tugas15.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className= \"App\">\r\n      {/*Tugas 11*/}\r\n      {/*<Table />*/}\r\n      {/*Tugas 12*/}\r\n      <Jam start = \"100\"/>\r\n      {/*Tugas 13*/}\r\n      {/*<Lists />*/}\r\n\r\n      {/*Tugas 14*/}\r\n      {/*<Tugas14/>*/}\r\n\r\n      {/*Tugas15*/}\r\n      <Tugas15/>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}